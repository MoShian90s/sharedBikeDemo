# Generated by Django 3.1.5 on 2021-02-02 19:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bike_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Insurance_id', models.CharField(max_length=100)),
                ('Brand', models.CharField(max_length=100)),
                ('Original_loc_lat', models.CharField(max_length=100)),
                ('Original_loc_long', models.CharField(max_length=100)),
                ('Original_geo_loc', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_id', models.CharField(max_length=100)),
                ('Customer_first_name', models.CharField(max_length=100)),
                ('Customer_last_name', models.CharField(max_length=100)),
                ('Customer_password', models.CharField(max_length=100)),
                ('Customer_phone_num', models.CharField(max_length=100)),
                ('Customer_gender', models.CharField(max_length=100)),
                ('Customer_age', models.CharField(max_length=100)),
                ('Customer_login_status', models.BooleanField(default=True)),
                ('Customer_wallet', models.FloatField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ManagerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(max_length=100)),
                ('Password', models.CharField(max_length=100)),
                ('Login_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Operator_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(max_length=100)),
                ('Password', models.CharField(max_length=100)),
                ('Login_status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Repair_Bikes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Repair_status', models.BooleanField(default=False)),
                ('Bike_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.bike_info')),
                ('Operator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.operator_info')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Payment_reference_number', models.CharField(max_length=100)),
                ('Card_Number', models.CharField(max_length=100)),
                ('Payment_date', models.CharField(max_length=100)),
                ('Payment_timestamp', models.CharField(max_length=100)),
                ('Customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.customerinfo')),
                ('Customer_password', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='password', to='BikeApp.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Current_location_latitude', models.CharField(max_length=100)),
                ('Current_location_longitude', models.CharField(max_length=100)),
                ('Customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Start_location_latitude', models.CharField(max_length=100)),
                ('Start_location_longitude', models.CharField(max_length=100)),
                ('End_location_latitude', models.CharField(max_length=100)),
                ('End_location_longitude', models.CharField(max_length=100)),
                ('Ride_Bill', models.FloatField(max_length=100)),
                ('Start_date', models.CharField(max_length=100)),
                ('End_date', models.CharField(max_length=100)),
                ('Start_time', models.CharField(max_length=100)),
                ('End_time', models.CharField(max_length=100)),
                ('is_complete', models.BooleanField(default=False)),
                ('Bike_id', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='BikeApp.bike_info')),
                ('Customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerComplaints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Complaint_id', models.CharField(max_length=100)),
                ('Complaint_Description', models.CharField(max_length=1000)),
                ('Complaint_Resolution', models.CharField(max_length=1000)),
                ('Status', models.CharField(choices=[('In Progress', 'In Progress'), ('New', 'New'), ('Resolved', 'Resolved'), ('Invalid', 'Invalid')], default='New', max_length=20)),
                ('Bike_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Bike_ID', to='BikeApp.bike_info')),
                ('Customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Changing_Bikes_Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('From_loc', models.CharField(max_length=100)),
                ('To_loc', models.CharField(max_length=100)),
                ('Number_bikes_moved', models.IntegerField()),
                ('Moving_status', models.BooleanField(default=False)),
                ('Operator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.operator_info')),
            ],
        ),
        migrations.CreateModel(
            name='Bike_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(choices=[('On Road', 'On Road'), ('Idle', 'Idle'), ('Out of Service', 'Out Of Service')], default='Idle', max_length=20)),
                ('Bike_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.bike_info')),
            ],
        ),
        migrations.CreateModel(
            name='Bike_Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Loc_lat', models.CharField(max_length=100)),
                ('Loc_long', models.CharField(max_length=100)),
                ('Geohash_loc', models.CharField(max_length=100)),
                ('Bike_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BikeApp.bike_info')),
                ('Customer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Customer_ID', to='BikeApp.customerinfo')),
            ],
        ),
    ]
